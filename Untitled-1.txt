<template>
   <div style="width:100%;border:1px">
           <v-form>
               <!-- <v-container grid-list-md text-xs-right  style="width:100%;border:1px:padding:0px" >  -->
              
              
                   <h2  style="border-style:solid;border-width:0.5px 0 0.5px 0;border-color:#acabab;display:block;background-color:#acabab" pl-2 >STUDENT DETAILS</h2>
<!--name first and last-->  
                   <v-layout row>
                       <v-flex pt-4 xs4 pl-1>NAME</v-flex>
  
                       <v-flex xs3  d-inline-fleX  >
                      
                           <v-text-field :error-messages="errors.collect('fname')" data-vv-name="fname" v-validate="'required|alpha'" label="First Name" required v-model="form.fname" ></v-text-field>
  <input type="text">jadghg
                        </span>
                       </v-flex>
  
                     
  
                       <v-flex xs3 offset-xs1>
                      
                           <v-text-field :error-messages="errors.collect('lname')" data-vv-name="lname" v-validate="'required|alpha'" label="Last Name" v-model="form.lname"></v-text-field>
                       </v-flex>
  
                   </v-layout>

<!--dob-->  
                   <v-layout row>
                       <v-flex pt-4 xs4 >D.O.B</v-flex>
                       <v-flex xs3 >


                         <v-menu
                          ref="menu"
                          lazy
                          :close-on-content-click="false"
                          v-model="menu"
                          transition="slide-y-transition"
                          offset-y
                          bottom
                          center
                          full-width
                          :nudge-right="40"
                          min-width="190px"
                      >
                          <v-text-field  v-model="form.dob"
                              slot="activator"
                              label="D.O.B"
                              prepend-icon="event"
                              >
                          </v-text-field>
                          <v-date-picker  v-model="form.dob"
                              landscape=""
                              ref="picker"
                              @change="save"
                              min="1950-0  1-01"
                              :max="new Date().toISOString().substr(0, 10)">
                          </v-date-picker>
                      </v-menu>
                       </v-flex>
                   </v-layout>

<!-- gender-->
                   <v-layout row>
                       <v-flex xs4 pt-4 class="name">GENDER</v-flex>
                      

                      
                        <v-radio-group :mandatory="true" row :error-messages="errors.collect('gender')" data-vv-name="gender" v-model="form.gender">
                            <v-flex xs2>
                               <v-radio name="radio_group_1" label="Male" :error-messages="errors.collect('gender')" data-vv-name="gender" v-validate="'required|in:1,2'" value="1" ></v-radio>
                            </v-flex>
                            <v-flex xs2>
                               <v-radio name="radio_group_1" label="Female" value="2"></v-radio>
                            </v-flex>
                        </v-radio-group>
                        <span v-show="errors.has('male')">{{ errors.any('radio_group_1') }}</span>
                   </v-layout>
<!-- blood groups -->
                   <v-layout>
                        <v-flex xs4 pt-4>BLOOD GROUP</v-flex>
                        <v-flex xs3>
                            <v-select  v-model="form.bloodgroup"
                               :error-messages="errors.collect('bgselect')"
                                    v-validate="'required'"
                                    data-vv-name="bgselect"
                                    required
                                    label="Select"
                                    :items="items"
                                    item-value="text"
                              ></v-select>
                        </v-flex>
                   </v-layout>

<!-- e-mail -->
                  <v-layout row>
                      <v-flex xs4 pt-4>E-MAIL</v-flex>
                      <v-flex xs3>
                           <v-text-field  v-model="form.mail"
                           :error-messages="errors.collect('email')"
                           v-validate="'required|email'"
                           data-vv-name="email"
                           label="E-mail" 
                           required
                      ></v-text-field>
                      </v-flex>
                  </v-layout>
   
<!--permanent address -->
                  <v-layout row>
                      <v-flex xs4 pt-4>
                          ADDRESS-1
                      </v-flex>
                     <v-flex xs8>
                         <v-text-field  v-model="form.add1"
                         :error-messages="errors.collect('address')" data-vv-name="address" v-validate="'required'"
                         label="PERMANENT ADDRESS"
                         required
                      ></v-text-field>

                     </v-flex>

                  </v-layout>
        
<!-- city and state of permnent address -->
                  <v-layout row>
                     
                                <v-flex xs4 pt-4>
                                     CITY
                                </v-flex>
                                <v-flex xs2>
                              <v-select  v-model="form.add1city"
                               :error-messages="errors.collect('cselect')"
                                    v-validate="'required'"
                                    data-vv-name="cselect"
                                    required
                                    label="Select"
                                    :items="items"
                                    item-value="text"
                              ></v-select>
                          </v-flex>
                      </v-flex>
                     
                           <v-flex xs2 pt-4>
                              STATE
                           </v-flex>
                           <v-flex xs2 >
                              <v-select  v-model="form.add1state"
                               :error-messages="errors.collect('sselect')"
                                    v-validate="'required'"
                                    data-vv-name="sselect"
                                    required
                               label="Select"
                                :items="items"
                                 item-value="text"
                              ></v-select>
                           </v-flex>
                     
                     
                         
                  </v-layout>

<!--pincode-->                    
                  <v-layout>
                      <v-flex xs4 pt-4>
                              PINCODE
                           </v-flex>
                           <v-flex xs2 >
                            <v-text-field  v-model="form.add1pincode" v-validate="'required|digits:6'" label="pincode" required  :error-messages="errors.collect('pin')" data-vv-name="pin" ></v-text-field>
                            
                        </span>
                           </v-flex>
                  </v-layout>
      
<!-- temporary address -->
                  <v-layout row>
                      <v-flex xs4 pt-4>
                          ADDRESS-2
                      </v-flex>
                     <v-flex xs8>
                         <v-text-field  v-model="form.add2"
                         label="TEMPORARY ADDRESS"
                         
                      ></v-text-field>

                     </v-flex>

                  </v-layout>

<!-- state and address of temporry address -->
                  <v-layout row>
                             <v-flex xs4 pt-4>
                                     CITY
                            </v-flex>
                            <v-flex xs2>
                              <v-select  v-model="form.add2city"
                                    label="Select"
                                    :items="items"
                                    item-value="text"
                              ></v-select>
                            </v-flex>
                      
                     
                           <v-flex xs2 pt-4>
                              STATE
                           </v-flex>
                           <v-flex xs2 >
                              <v-select  v-model="form.add2state"
                               label="Select"
                                :items="items"
                                 item-value="text"
                              ></v-select>
                           </v-flex>
                  </v-layout>

<!--pincode-->                    
                  <v-layout>
                      <v-flex xs4 pt-4>
                              PINCODE
                           </v-flex>
                           <v-flex xs2 >
                            <v-text-field  v-model="form.add2pincode" label="pincode" ></v-text-field>
                           </v-flex>
                  </v-layout>

<!-- contact numbers -->
                    <v-layout>
                        <v-flex xs4 pt-4>
                           CONTACT DETAILS
                        </v-flex>
                        <v-flex xs2>
                            <v-text-field  v-model="form.contact1"  v-validate="'required|digits:10'" label="phone" required  :error-messages="errors.collect('phone')" data-vv-name="phone" ></v-text-field>
                        </v-flex>
                        <v-flex xs2 offset-xs1 >
                       <v-text-field   v-model="form.contact2" label="student-2" ></v-text-field>
                        </v-flex>
                    </v-layout>
 
    <v-btn @click="submit" color="primary">CONTINUE</v-btn>
    <v-btn @click="clear" color="primary">clear</v-btn>

               <!-- </v-container> -->
           </v-form>
   </div>
</template>




<script>
export default {
  $_veeValidate: {
    validator: "new"
  },
  computed: {
    form() {
      return this.$store.state.form;
    },
    items() {
      return this.$store.state.items;
    }
  },
  data() {
    return {
        a:false,
      valid: true,
      date: null,
      menu: false,
      checkbox: null,
      dictionary: {
        attributes: {
          email: "E-mail Address",
        },
        custom: {
          phone: {
            required: "phone is required"
          },
          fname: {
            required: () => "Name can not be empty",
            max: "The name field may not be greater than 10 characters"
          },
          lname: {
            required: () => "Name can not be empty",
            max: "The name field may not be greater than 10 characters"
          },
          address: {
            required: () => "address can not be empty",
            max: "The name field may not be greater than 10 characters"
          },
          dobselect: {
            required:   "D.O.B is required"
          },
          bgselect: {
            required:"Select field is required"
          },
          cselect: {
            required: "Select field is required"
          },
          sselect: {
            required: "Select field is required"
          },
          pin: {
            required: "pincode is required"
          },
          gender:{
            required: "select is required"
          }
          
        }
      }
    };
  },
  mounted() {
    this.$validator.localize("en", this.dictionary);
  },

  watch: {
    menu(val) {
      val && this.$nextTick(() => (this.$refs.picker.activePicker = "YEAR"));
    }
  },
  methods: {
  submit(){
        this.$validator.validateAll().then((result) => {
        if (result) {
        if(this.errors.any() == false){
          this.$emit('form1validity',3);

        }
        
          return;
        }

        
      });
      },
    clear() {
      Object.keys(this.form).forEach(key => this.form[key]=null);
      //  this.form.fname = "",
      //  this.form.lname = "",
      //  this.form.dob = null,
      //  this.form.gender = "",
      //  this.form.bloodgroup = "",
      //  this.form.mail = "",
      //  this.form.add1 = "",
      //  this.form.add1city = "",
      //  this.form.add1state = "",
      //  this.form.add1pincode = "",
      //  this.form.add2 = "",
      //  this.form.add2city = "",
      //  this.form.add2state = "",
      //  this.form.add2pincode = "",
      //  this.form.contact1 = "",
      //  this.form.contact2 = "";
      this.$validator.reset();
    },

    save(date) {
      this.$refs.menu.save(date);
    },
    onFileChange(e) {
      var files = e.target.files || e.dataTransfer.files;
      if (!files.length) return;
      this.createImage(files[0]);
    },
    createImage(file) {
      var image = new Image();
      var reader = new FileReader();
      var vm = this;

      reader.onload = e => {
        vm.image = e.target.result;
      };
      reader.readAsDataURL(file);
    },
    removeImage: function(e) {
      this.image = "";
    }
  }
};
</script>

<style scoped> 
.name{
  padding-left: 40px;
}
</style>

